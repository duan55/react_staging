{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u9E3F\\u68EE\\\\Desktop\\\\react_staging\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class search extends Component {\n  constructor(...args) {\n    super(...args);\n    //用户搜索\n    this.searchUser = () => {\n      //1.获取用户的输入，button绑定了事件但是要获取input的输入需要使用ref、受控组件表单\n      //连续解构赋值直接获取到value并将其重命名为keyword，但是后文如果去取inputSth则会提示并没有解构得到inputSth\n      const {\n        inputSth: {\n          value: keyword\n        }\n      } = this;\n      console.log(keyword);\n      //2.发送网络请求\n      //github后端使用cors解决了跨域问题，不再需要设置setupProxy.js\n      //练习需要使用sgg提供的服务器访问地址\n      // axios.get(`http://localhost:3000/api1/search/users?q=${keyword}`).then( 发送的位置就是访问的位置，则http://ip+端口可以不写\n      axios.get(`/api1/search/users?q=${keyword}`).then(response => {\n        console.log('成功了', response.data);\n        this.props.saveUsers(response.data);\n      }, error => {\n        console.log('失败了', error);\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22Github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.inputSth = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u9700\\u8981\\u641C\\u7D22\\u7684\\u7528\\u6237\\u540D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.searchUser,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","search","constructor","args","searchUser","inputSth","value","keyword","console","log","get","then","response","data","props","saveUsers","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","c","type","placeholder","onClick"],"sources":["C:/Users/陈鸿森/Desktop/react_staging/src/components/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class search extends Component {\r\n\r\n    //用户搜索\r\n    searchUser = () => {\r\n        //1.获取用户的输入，button绑定了事件但是要获取input的输入需要使用ref、受控组件表单\r\n        //连续解构赋值直接获取到value并将其重命名为keyword，但是后文如果去取inputSth则会提示并没有解构得到inputSth\r\n        const { inputSth: { value: keyword } } = this\r\n        console.log(keyword)\r\n        //2.发送网络请求\r\n        //github后端使用cors解决了跨域问题，不再需要设置setupProxy.js\r\n        //练习需要使用sgg提供的服务器访问地址\r\n        // axios.get(`http://localhost:3000/api1/search/users?q=${keyword}`).then( 发送的位置就是访问的位置，则http://ip+端口可以不写\r\n        axios.get(`/api1/search/users?q=${keyword}`).then(\r\n            response => {\r\n                console.log('成功了',response.data)\r\n                this.props.saveUsers(response.data)\r\n            },\r\n            error => {\r\n                console.log('失败了',error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"jumbotron\">\r\n                <h3 className=\"jumbotron-heading\">搜索Github用户</h3>\r\n                <div>\r\n                    <input ref={c => this.inputSth = c} type=\"text\" placeholder=\"输入需要搜索的用户名\" />&nbsp;\r\n                    <button onClick={this.searchUser}>搜索</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAE1C;IAAA,KACAC,UAAU,GAAG,MAAM;MACf;MACA;MACA,MAAM;QAAEC,QAAQ,EAAE;UAAEC,KAAK,EAAEC;QAAQ;MAAE,CAAC,GAAG,IAAI;MAC7CC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpB;MACA;MACA;MACA;MACAT,KAAK,CAACY,GAAG,CAAC,wBAAwBH,OAAO,EAAE,CAAC,CAACI,IAAI,CAC7CC,QAAQ,IAAI;QACRJ,OAAO,CAACC,GAAG,CAAC,KAAK,EAACG,QAAQ,CAACC,IAAI,CAAC;QAChC,IAAI,CAACC,KAAK,CAACC,SAAS,CAACH,QAAQ,CAACC,IAAI,CAAC;MACvC,CAAC,EACDG,KAAK,IAAI;QACLR,OAAO,CAACC,GAAG,CAAC,KAAK,EAACO,KAAK,CAAC;MAC5B,CACJ,CAAC;IACL,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACL,oBACIjB,OAAA;MAASkB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1BnB,OAAA;QAAIkB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDvB,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UAAOwB,GAAG,EAAEC,CAAC,IAAI,IAAI,CAACpB,QAAQ,GAAGoB,CAAE;UAACC,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,QAC3E,eAAAvB,OAAA;UAAQ4B,OAAO,EAAE,IAAI,CAACxB,UAAW;UAAAe,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAElB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}