{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u9E3F\\u68EE\\\\Desktop\\\\react_staging\\\\src\\\\components\\\\Item\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mouse: false\n    };\n    //鼠标移入移出状态\n    //鼠标移入移出的回调函数\n    this.handleMouse = isEnter => {\n      return () => {\n        //返回值不写成函数的话，打开页面时就会触发那些事件函数\n        this.setState({\n          mouse: isEnter\n        });\n      };\n    };\n    //取消或勾选todo的回调函数\n    this.handleCheckBoxChange = id => {\n      //input绑定了时间且想要修改input的值的场合，可以使用event\n      return event => {\n        //传统input可以拿到value\n        // console.log(id,event.target.value)\n        //修改为checkbox之后，需要精确去拿对应的checked属性\n        // console.log(id,event.target.checked)\n        this.props.updateTodo(id, event.target.checked);\n      };\n    };\n    //删除todo的回调函数 如果不想使用柯里化或者高阶函数 可以在这里直接使用箭头函数，使得其直接返回一个函数 而不需要再在回调函数声明的时候再进行函数的返回\n    this.handleDeleteTodo = id => {\n      //自带的confirm弹窗，18版本之前需要加上window.\n      // if(window.confirm('确认删除该条记录吗？')){\n      if (confirm('确认删除该条记录吗？')) {\n        this.props.deleteTodo(id);\n      }\n    };\n  }\n  render() {\n    const {\n      id,\n      text,\n      done\n    } = this.props;\n    const {\n      mouse\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //设置【高亮背景色(灰/白)】与鼠标移入移出触发函数\n      _jsxDEV(\"li\", {\n        style: {\n          backgroundColor: mouse ? '#ddd' : '#fff'\n        },\n        onMouseEnter: this.handleMouse(true),\n        onMouseLeave: this.handleMouse(false),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: done,\n            onChange: this.handleCheckBoxChange(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\">\", text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.handleDeleteTodo(id);\n          },\n          className: \"btn btn-danger\",\n          style: {\n            display: mouse ? 'block' : 'none'\n          },\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    );\n  }\n}\n//对接收的props进行: 类型 & 必要性的限制\nItem.propTypes = {\n  //限制{updateTodo}为一个[必传]的[函数]\n  updateTodo: PropTypes.func.isRequired,\n  //\n  deleteTodo: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","Item","constructor","args","state","mouse","handleMouse","isEnter","setState","handleCheckBoxChange","id","event","props","updateTodo","target","checked","handleDeleteTodo","confirm","deleteTodo","render","text","done","style","backgroundColor","onMouseEnter","onMouseLeave","children","type","defaultChecked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","display","propTypes","func","isRequired"],"sources":["C:/Users/陈鸿森/Desktop/react_staging/src/components/Item/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nexport default class Item extends Component {\r\n\r\n  //对接收的props进行: 类型 & 必要性的限制\r\n  static propTypes = {\r\n    //限制{updateTodo}为一个[必传]的[函数]\r\n    updateTodo: PropTypes.func.isRequired,\r\n    //\r\n    deleteTodo: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = { mouse: false } //鼠标移入移出状态\r\n\r\n  //鼠标移入移出的回调函数\r\n  handleMouse = (isEnter) => {\r\n    return () => {\r\n      //返回值不写成函数的话，打开页面时就会触发那些事件函数\r\n      this.setState({ mouse: isEnter })\r\n    }\r\n  }\r\n\r\n  //取消或勾选todo的回调函数\r\n  handleCheckBoxChange = (id) => {\r\n    //input绑定了时间且想要修改input的值的场合，可以使用event\r\n    return (event) => {\r\n      //传统input可以拿到value\r\n      // console.log(id,event.target.value)\r\n      //修改为checkbox之后，需要精确去拿对应的checked属性\r\n      // console.log(id,event.target.checked)\r\n      this.props.updateTodo(id, event.target.checked)\r\n    }\r\n  }\r\n\r\n  //删除todo的回调函数 如果不想使用柯里化或者高阶函数 可以在这里直接使用箭头函数，使得其直接返回一个函数 而不需要再在回调函数声明的时候再进行函数的返回\r\n  handleDeleteTodo = (id) => {\r\n    //自带的confirm弹窗，18版本之前需要加上window.\r\n    // if(window.confirm('确认删除该条记录吗？')){\r\n    if(confirm('确认删除该条记录吗？')){\r\n      this.props.deleteTodo(id)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, text, done } = this.props\r\n    const { mouse } = this.state\r\n    return (\r\n      //设置【高亮背景色(灰/白)】与鼠标移入移出触发函数\r\n      <li style={{ backgroundColor: mouse ? '#ddd' : '#fff' }} onMouseEnter={this.handleMouse(true)} onMouseLeave={this.handleMouse(false)}>\r\n        <label>\r\n          <input type=\"checkbox\" defaultChecked={done} onChange={this.handleCheckBoxChange(id)} />\r\n          {/* <span>{id}==&gt;{text}</span> */}\r\n          <span>&gt;{text}</span>\r\n        </label>\r\n        <button onClick={() => { this.handleDeleteTodo(id) }} className=\"btn btn-danger\" style={{ display: mouse ? 'block' : 'none' }}>删除</button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,MAAMC,IAAI,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAU1CC,KAAK,GAAG;MAAEC,KAAK,EAAE;IAAM,CAAC;IAAC;IAEzB;IAAA,KACAC,WAAW,GAAIC,OAAO,IAAK;MACzB,OAAO,MAAM;QACX;QACA,IAAI,CAACC,QAAQ,CAAC;UAAEH,KAAK,EAAEE;QAAQ,CAAC,CAAC;MACnC,CAAC;IACH,CAAC;IAED;IAAA,KACAE,oBAAoB,GAAIC,EAAE,IAAK;MAC7B;MACA,OAAQC,KAAK,IAAK;QAChB;QACA;QACA;QACA;QACA,IAAI,CAACC,KAAK,CAACC,UAAU,CAACH,EAAE,EAAEC,KAAK,CAACG,MAAM,CAACC,OAAO,CAAC;MACjD,CAAC;IACH,CAAC;IAED;IAAA,KACAC,gBAAgB,GAAIN,EAAE,IAAK;MACzB;MACA;MACA,IAAGO,OAAO,CAAC,YAAY,CAAC,EAAC;QACvB,IAAI,CAACL,KAAK,CAACM,UAAU,CAACR,EAAE,CAAC;MAC3B;IACF,CAAC;EAAA;EAEDS,MAAMA,CAAA,EAAG;IACP,MAAM;MAAET,EAAE;MAAEU,IAAI;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACT,KAAK;IACrC,MAAM;MAAEP;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B;MAAA;MACE;MACAJ,OAAA;QAAIsB,KAAK,EAAE;UAAEC,eAAe,EAAElB,KAAK,GAAG,MAAM,GAAG;QAAO,CAAE;QAACmB,YAAY,EAAE,IAAI,CAAClB,WAAW,CAAC,IAAI,CAAE;QAACmB,YAAY,EAAE,IAAI,CAACnB,WAAW,CAAC,KAAK,CAAE;QAAAoB,QAAA,gBACnI1B,OAAA;UAAA0B,QAAA,gBACE1B,OAAA;YAAO2B,IAAI,EAAC,UAAU;YAACC,cAAc,EAAEP,IAAK;YAACQ,QAAQ,EAAE,IAAI,CAACpB,oBAAoB,CAACC,EAAE;UAAE;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAExFjC,OAAA;YAAA0B,QAAA,GAAM,GAAI,EAACN,IAAI;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACRjC,OAAA;UAAQkC,OAAO,EAAEA,CAAA,KAAM;YAAE,IAAI,CAAClB,gBAAgB,CAACN,EAAE,CAAC;UAAC,CAAE;UAACyB,SAAS,EAAC,gBAAgB;UAACb,KAAK,EAAE;YAAEc,OAAO,EAAE/B,KAAK,GAAG,OAAO,GAAG;UAAO,CAAE;UAAAqB,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxI;IAAC;EAET;AACF;AAtDE;AAFmBhC,IAAI,CAGhBoC,SAAS,GAAG;EACjB;EACAxB,UAAU,EAAEf,SAAS,CAACwC,IAAI,CAACC,UAAU;EACrC;EACArB,UAAU,EAAEpB,SAAS,CAACwC,IAAI,CAACC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}