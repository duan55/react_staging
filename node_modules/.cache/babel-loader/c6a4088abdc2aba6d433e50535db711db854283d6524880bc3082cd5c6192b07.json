{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9648\\u9E3F\\u68EE\\\\Desktop\\\\react_staging\\\\src\\\\DiyColor.jsx\";\n// 引入所需的组件和模块\nimport React from 'react';\nimport { ConfigProvider, Radio, Checkbox } from 'antd'; // 假设已经安装并引入了antd库\n\n// 创建一个函数式组件 App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiyColor = () => {\n  // 返回JSX代码，用于渲染UI\n  return (\n    /*#__PURE__*/\n    // 使用ConfigProvider包裹子组件，以便于向这些子组件传递主题配置\n    _jsxDEV(ConfigProvider\n    // 主题配置对象\n    , {\n      theme: {\n        components: {\n          // 自定义Radio组件的主题颜色为绿色\n          Radio: {\n            colorPrimary: 'green'\n          },\n          // 自定义Checkbox组件的主题颜色为红色\n          Checkbox: {\n            colorPrimary: 'red'\n          }\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Radio, {\n        children: \"\\u8FD9\\u662F\\u4E00\\u4E2ARadio\\u6309\\u94AE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: \"\\u8FD9\\u662F\\u4E00\\u4E2ACheckbox\\u590D\\u9009\\u6846\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = DiyColor;\nexport default DiyColor; // 导出App组件，以便在其他地方使用\nvar _c;\n$RefreshReg$(_c, \"DiyColor\");","map":{"version":3,"names":["React","ConfigProvider","Radio","Checkbox","jsxDEV","_jsxDEV","DiyColor","theme","components","colorPrimary","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/陈鸿森/Desktop/react_staging/src/DiyColor.jsx"],"sourcesContent":["// 引入所需的组件和模块\r\nimport React from 'react';\r\nimport { ConfigProvider, Radio, Checkbox } from 'antd'; // 假设已经安装并引入了antd库\r\n\r\n// 创建一个函数式组件 App\r\nconst DiyColor = () => {\r\n  // 返回JSX代码，用于渲染UI\r\n  return (\r\n    // 使用ConfigProvider包裹子组件，以便于向这些子组件传递主题配置\r\n    <ConfigProvider\r\n      // 主题配置对象\r\n      theme={{\r\n        components: {\r\n          // 自定义Radio组件的主题颜色为绿色\r\n          Radio: {\r\n            colorPrimary: 'green',\r\n          },\r\n          // 自定义Checkbox组件的主题颜色为红色\r\n          Checkbox: {\r\n            colorPrimary: 'red',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {/* 渲染一个Radio按钮 */}\r\n      <Radio>这是一个Radio按钮</Radio>\r\n      {/* 渲染一个Checkbox复选框 */}\r\n      <Checkbox>这是一个Checkbox复选框</Checkbox>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport default DiyColor; // 导出App组件，以便在其他地方使用"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,MAAM,CAAC,CAAC;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB;EACA;IAAA;IACE;IACAD,OAAA,CAACJ;IACC;IAAA;MACAM,KAAK,EAAE;QACLC,UAAU,EAAE;UACV;UACAN,KAAK,EAAE;YACLO,YAAY,EAAE;UAChB,CAAC;UACD;UACAN,QAAQ,EAAE;YACRM,YAAY,EAAE;UAChB;QACF;MACF,CAAE;MAAAC,QAAA,gBAGFL,OAAA,CAACH,KAAK;QAAAQ,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAE1BT,OAAA,CAACF,QAAQ;QAAAO,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;AAErB,CAAC;AAACC,EAAA,GAzBIT,QAAQ;AA2Bd,eAAeA,QAAQ,CAAC,CAAC;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}